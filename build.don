compile()
   ofiles = cc(@src/*c, flags:["-DDEBUG", "-O0", "-ggdb3", "-rdynamic", "-std=c89", "-pedantic", "-Werror", "-Wno-error=unused-parameter", "-Wno-error=unused-variable", "-Wno-error=unused-function", "-Wall", "-Wextra", "-Wformat=2", "-Winit-self", "-Wmissing-include-dirs", "-Wswitch-enum", "-Wsync-nand", "-Wunused", "-Wstrict-overflow=5", "-Wfloat-equal", "-Wundef", "-Wshadow", "-Wunsafe-loop-optimizations", "-Wbad-function-cast", "-Wc++-compat", "-Wcast-align", "-Wwrite-strings", "-Wconversion", "-Wlogical-op", "-Waggregate-return", "-Wstrict-prototypes", "-Wold-style-definition", "-Wmissing-prototypes", "-Wmissing-declarations", "-Wmissing-noreturn", "-Wmissing-format-attribute", "-Wnormalized=nfc", "-Wpacked", "-Wpacked-bitfield-compat", "-Wredundant-decls", "-Wnested-externs", "-Wunreachable-code", "-Wno-error=unreachable-code", "-Winline", "-Winvalid-pch", "-Wdisabled-optimization", "-Wstack-protector", "-pipe", "-march=native"])
   return link(ofiles, name:"don")

test:
   program = compile()
   pass = 0
   fail = 0
   hasOutput = false
   for f in @test/*
      out, exitcode, err = exec(program, "-o", ".don-test", "-i", f, failOnError:false, echo:false, echoStderr:false)
      if exitcode || out != "PASS\n" || err != ""
         fail += 1
         if hasOutput
            echo("")
         echo("FAIL: " filename(f))
         hasOutput = out != "" || err != ""
         if hasOutput
            if out
               echo(out, prefix:"> ")
            if err
               echo(err, prefix:"> ")
      else
         pass += 1
   if fail
      echo("")
   echo("pass:  " pass)
   echo("fail:  " fail)

default:
   program = compile()
   exec("valgrind", "-q", "--leak-check=full", "--show-reachable=yes", program, "-o", ".don-test", "-i", "input")
