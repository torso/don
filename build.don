valgrind = ["valgrind", "-q", "--leak-check=full", "--show-reachable=yes"]
gdb = ["gdb", "--args"]

compile(extraflags=[])
   ofiles = cc(@src/*c, flags:["-DDEBUG", "-O0", "-ggdb3", "-rdynamic", "-std=c89", "-pedantic", "-Werror", "-Wno-error=unused-parameter", "-Wno-error=unused-variable", "-Wno-error=unused-function", "-Wall", "-Wextra", "-Wformat=2", "-Winit-self", "-Wmissing-include-dirs", "-Wswitch-enum", "-Wsync-nand", "-Wunused", "-Wstrict-overflow=5", "-Wfloat-equal", "-Wundef", "-Wshadow", "-Wunsafe-loop-optimizations", "-Wbad-function-cast", "-Wc++-compat", "-Wcast-align", "-Wwrite-strings", "-Wconversion", "-Wlogical-op", "-Waggregate-return", "-Wstrict-prototypes", "-Wold-style-definition", "-Wmissing-prototypes", "-Wmissing-declarations", "-Wmissing-noreturn", "-Wmissing-format-attribute", "-Wnormalized=nfc", "-Wpacked", "-Wpacked-bitfield-compat", "-Wredundant-decls", "-Wnested-externs", "-Wunreachable-code", "-Wno-error=unreachable-code", "-Winline", "-Winvalid-pch", "-Wdisabled-optimization", "-Wstack-protector", "-pipe", "-march=native"]::extraflags)
   return link(ofiles, name:"don")

dotest(prefix=[], debug=false)
   program = compile()
   pass = 0
   fail = 0
   hasOutput = false
   for f in @test/*
      out, exitcode = exec(prefix, program, "-i", f, failOnError:false, echo:false, echoStderr:false, env:["XDG_CACHE_HOME", "tempcache"])
      if exitcode || out[0] != "PASS\n" || out[1] != ""
         fail += 1
         if hasOutput
            echo("")
         echo("FAIL: " filename(f))
         hasOutput = out[0] != "" || out[1] != ""
         if hasOutput
            if out[0]
               echo(out[0], prefix:"> ")
            if out[1]
               echo(out[1], prefix:"> ")
         if debug
            exec(gdb, program, "-i", failOnError:false, env:["XDG_CACHE_HOME", "tempcache"])
      else
         pass += 1
   if fail
      echo("")
   echo("pass:  " pass)
   echo("fail:  " fail)
   fail(condition:fail, silent:true)

test:
   dotest()

vtest:
   dotest(valgrind)

dbgtest:
   dotest(debug:true)

default:
   program = compile()
   exec(valgrind, program, "-i", "input", env:["XDG_CACHE_HOME", "tempcache"])

debug:
   program = compile()
   exec(gdb, program, "-i", "input", env:["XDG_CACHE_HOME", "tempcache"])

install:
   program = compile(extraflags:["-DDATADIR=\"/usr/local/share/don/\""])
   exec("rm", "-f", @/usr/local/bin/don)
   exec("rm", "-rf", @/usr/local/share/don)
   exec("mkdir", @/usr/local/share/don/)
   exec("cp", program, @/usr/local/bin/)
   exec("cp", @data/don.don, @/usr/local/share/don/)
